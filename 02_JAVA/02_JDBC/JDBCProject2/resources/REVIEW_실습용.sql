-- JDBC 개인 실습용 sql
DROP TABLE RENTAL;
DROP TABLE MEMBER;
DROP TABLE BOOK;



--도서 테이블
CREATE TABLE BOOK(
    BOOK_ID NUMBER PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL,
    AUTHOR VARCHAR2(20),
    PUBLISHER VARCHAR2(50)
);

--회원 테이블
CREATE TABLE MEMBER(
    MEMBER_ID NUMBER PRIMARY KEY,
    MEMBER_NAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(20)
);

--회원과 도서를 연결해줄 대여 테이블
CREATE TABLE RENTAL(
    RENTAL_ID NUMBER PRIMARY KEY,
    MEMBER_ID NUMBER NOT NULL,
    BOOK_ID NUMBER NOT NULL,
    RENTAL_DATE DATE DEFAULT SYSDATE,
    RETURN_DATE DATE,
    CONSTRAINT FK_RENTAL_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    CONSTRAINT FK_RENTAL_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID)
    
);
DROP SEQUENCE SEQ_BOOK_ID;
DROP SEQUENCE SEQ_RENTAL_ID;
DROP SEQUENCE SEQ_MEMBER_ID;
-- 도서 PK 시퀀스
CREATE SEQUENCE SEQ_BOOK_ID;
CREATE SEQUENCE SEQ_RENTAL_ID;
CREATE SEQUENCE SEQ_MEMBER_ID;


--도서 더미데이터 5개 추가
INSERT INTO BOOK
VALUES(SEQ_BOOK_ID.NEXTVAL, '자바의 정석', '남궁성', '한빛');

INSERT INTO BOOK
VALUES(SEQ_BOOK_ID.NEXTVAL, '해리포터와 마법사', '최지원', '문학인');

INSERT INTO BOOK
VALUES(SEQ_BOOK_ID.NEXTVAL, '어린왕자', '토마스', '사람');

INSERT INTO BOOK
VALUES(SEQ_BOOK_ID.NEXTVAL, '1984', '조지 오웰', '열린');

INSERT INTO BOOK
VALUES(SEQ_BOOK_ID.NEXTVAL, '데이터베이스개론', '허밍웨이', '한빛');

INSERT INTO MEMBER VALUES(SEQ_MEMBER_ID.NEXTVAL, '김민수', '010-2222-3333');
INSERT INTO MEMBER VALUES(SEQ_MEMBER_ID.NEXTVAL, '최수빈', '010-4444-4444');
INSERT INTO MEMBER VALUES(SEQ_MEMBER_ID.NEXTVAL, '박지민', '010-1234-5151');


--대여 더미데이터 2개
INSERT INTO RENTAL
VALUES(SEQ_RENTAL_ID.NEXTVAL, 1, 1, SYSDATE, NULL);

INSERT INTO RENTAL
VALUES(SEQ_RENTAL_ID.NEXTVAL, 2, 3, SYSDATE - 10, SYSDATE - 3);

COMMIT;

--RENTAL_ID가 NULL이 아니다 -> 대여한적이 있다. 그리고 반납하지 않았다.
SELECT B.BOOK_ID, B.TITLE, B.AUTHOR, B.PUBLISHER,
          CASE WHEN R.RENTAL_ID IS NOT NULL AND R.RETURN_DATE IS NULL
                  THEN 1 ELSE 0 END AS IS_RENTED
FROM BOOK B
LEFT JOIN RENTAL R ON B.BOOK_ID = R.BOOK_ID
AND R.RETURN_DATE IS NULL -- 현재 대여중인 책을 구분
ORDER BY B.BOOK_ID;